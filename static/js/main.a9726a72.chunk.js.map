{"version":3,"sources":["utils/config.js","components/ImgIcon/index.jsx","components/SearchInput/index.jsx","store/actions/actionTypes.js","store/actions/index.js","components/Header/index.jsx","components/GridItem/index.jsx","pages/ImageList/index.jsx","App.js","store/reducers/headerReducer.js","store/reducers/imagesDataReducer.js","store/reducers/gridFilterReducer.js","store/reducers/index.js","index.js","store/index.js"],"names":["API","ImgIcon","img","src","alt","className","defaultProps","SearchInput","focusOut","searchKeyHandler","useState","searchKey","setSearchKey","searchHandler","useCallback","debounce","value","onChange","event","target","onBlur","HEADER","IMAGESDATA","GRIDFILTER","updateHeader","payload","type","Header","dispatch","useDispatch","filterKey","setfilterKey","headerData","useSelector","state","header","showSearchInput","setShowSearchInput","sticky","backButton","title","onClick","searchEnabled","key","GridItem","item","imgSrc","setImgSrc","name","loading","onError","ImageList","scrollRef","useRef","pageNum","setPageNum","masterList","setMasterList","imgList","setImgList","hasMore","setHasMore","imagesData","filter","useEffect","a","fetch","response","json","data","page","curList","content","updatedList","parseInt","length","toLowerCase","includes","ref","onScroll","current","scrollTop","bottom","clientHeight","map","imgObj","index","replace","App","initialState","headerReducer","imagesListReducer","gridFilterReducer","rootReducer","combineReducers","imagesDataReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9726a72.chunk.js","sourcesContent":["export const API = {\r\n  DATASRC: \"https://test.create.diagnal.com/data\",\r\n  IMGSRC: \"https://test.create.diagnal.com/images\",\r\n  IMGPLACEHOLDER:\r\n    \"https://test.create.diagnal.com/images/placeholder_for_missing_posters.png\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { API } from \"../../utils/config\";\r\n\r\n/**\r\n * @description - Image Icon Component.\r\n * @param {string} img - Image String.\r\n * @returns {Node} - Returns the image icon view.\r\n */\r\nfunction ImgIcon({ img }) {\r\n  return (\r\n    <img\r\n      src={`${API.IMGSRC}/${img}`}\r\n      alt=\"back icon\"\r\n      className=\"w-5 h-5 transition duration-500 ease-in-out transform hover:scale-110\"\r\n    />\r\n  );\r\n}\r\n\r\nImgIcon.defaultProps = {\r\n  img: \"\",\r\n};\r\n\r\nImgIcon.propTypes = {\r\n  img: PropTypes.string,\r\n};\r\n\r\nexport default ImgIcon;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n/**\r\n * @description - SearchInput Component.\r\n *\r\n * @param {string} img - Image String.\r\n * @returns {Node} - Returns the SearchInput view.\r\n */\r\nfunction SearchInput({ focusOut, searchKeyHandler }) {\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const searchHandler = useCallback(debounce(searchKeyHandler, 300), []);\r\n\r\n  function handleInputChange(event) {\r\n    const { value } = event.target;\r\n    setSearchKey(value);\r\n    searchHandler(value);\r\n  }\r\n\r\n  return (\r\n    <input\r\n      value={searchKey}\r\n      onChange={handleInputChange}\r\n      onBlur={focusOut}\r\n      className=\"w-11/12 rounded-md p-1 px-1.5 transition duration-1000 ease-in transform scale-100\"\r\n    />\r\n  );\r\n}\r\n\r\nSearchInput.defaultProps = {\r\n  focusOut: null,\r\n  searchKeyHandler: null,\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  focusOut: PropTypes.func,\r\n  searchKeyHandler: PropTypes.func,\r\n};\r\n\r\nexport default SearchInput;\r\n","export const HEADER = {\r\n  UPDATE: \"HEADER_UPDATE\",\r\n};\r\n\r\nexport const IMAGESDATA = {\r\n  UPDATE: \"IMAGESDATA_UPDATE\",\r\n};\r\n\r\nexport const GRIDFILTER = {\r\n  FILTER: \"GRIDFILTER\",\r\n};\r\n","import { HEADER, IMAGESDATA, GRIDFILTER } from \"./actionTypes\";\r\n\r\nexport const updateHeader = (payload) => {\r\n  return { type: HEADER.UPDATE, payload };\r\n};\r\n\r\nexport const updateImagesData = (payload) => {\r\n  return { type: IMAGESDATA.UPDATE, payload };\r\n};\r\n\r\nexport const filterGrid = (payload) => {\r\n  return { type: GRIDFILTER.FILTER, payload };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImgIcon from \"../ImgIcon\";\r\nimport SearchInput from \"../SearchInput\";\r\nimport { filterGrid } from \"../../store/actions\";\r\n\r\n/**\r\n * @description - Header Component.\r\n * @returns {Node} - Header View Component\r\n */\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n  const [filterKey, setfilterKey] = useState(\"\");\r\n  const headerData = useSelector((state) => state.header);\r\n  const [showSearchInput, setShowSearchInput] = useState(false);\r\n\r\n  function onClickHandler() {\r\n    setShowSearchInput(true);\r\n  }\r\n\r\n  function onOutOfFocus() {\r\n    setShowSearchInput(false);\r\n  }\r\n\r\n  function filterImageList(key) {\r\n    setfilterKey(key);\r\n    dispatch(filterGrid(key));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`flex flex-row ${\r\n        headerData.sticky ? \"sticky top-0 z-10\" : \"absolute\"\r\n      } justify-center items-center space-x-4 p-4 bg-gradient-to-b from-black via-black w-full h-header-height`}\r\n    >\r\n      <div className=\"flex-initial flex-shrink-0\">\r\n        {headerData.backButton ? <ImgIcon img=\"Back.png\" /> : null}\r\n      </div>\r\n      <div className=\"flex-auto flex-shrink-0 text-left text-white whitespace-nowrap align-middle text-lg font-semibold\">\r\n        {headerData.title}\r\n      </div>\r\n      <div\r\n        className=\"flex flex-row flex-initial justify-end\"\r\n        onClick={onClickHandler}\r\n      >\r\n        <div\r\n          className={`${\r\n            headerData.searchEnabled && !showSearchInput ? \"\" : \"hidden\"\r\n          } flex flex-row flex-initial justify-end items-end space-x-2`}\r\n        >\r\n          <span className=\"w-36 text-white whitespace-nowrap overflow-hidden overflow-ellipsis\">{filterKey}</span>\r\n          <ImgIcon img=\"search.png\" />\r\n        </div>\r\n        <div\r\n          className={`${\r\n            headerData.searchEnabled && !showSearchInput ? \"hidden\" : \"\"\r\n          } flex flex-initial justify-end items-end`}\r\n        >\r\n          <SearchInput\r\n            focusOut={onOutOfFocus}\r\n            searchKeyHandler={filterImageList}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: \"\",\r\n  backButton: true,\r\n  searchEnabled: true,\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  backButton: PropTypes.bool,\r\n  searchEnabled: PropTypes.bool,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { API } from \"../../utils/config\";\r\n\r\n/**\r\n * @description - GridItem Component.\r\n * @returns {Node} - GridItem View Component\r\n */\r\nfunction GridItem({ item }) {\r\n  const [imgSrc, setImgSrc] = useState(`${API.IMGSRC}/${item[\"poster-image\"]}`);\r\n\r\n  /**\r\n   * @description - Image Load Error handler.\r\n   * @returns {null} - Sets the placeholder image src.\r\n   */\r\n  function onImgLoadError() {\r\n    setImgSrc(API.IMGPLACEHOLDER);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"min-w-full flex flex-col justify-start items-start pb-10 overflow-hidden\"\r\n      title={item.name}\r\n    >\r\n      <img\r\n        src={imgSrc}\r\n        alt={item.name}\r\n        className=\"flex-none w-full h-full pb-2\"\r\n        loading=\"lazy\"\r\n        onError={onImgLoadError}\r\n      />\r\n      <div className=\"flex-none w-full text-left text-gray-400 whitespace-nowrap overflow-hidden overflow-ellipsis\">\r\n        {item.name}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGridItem.defaultProps = {\r\n  item: {},\r\n};\r\n\r\nGridItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    \"poster-image\": PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default GridItem;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { updateHeader, updateImagesData } from \"../../store/actions\";\r\nimport { API } from \"../../utils/config\";\r\nimport GridItem from \"../../components/GridItem\";\r\n\r\n/**\r\n *  @description - Image List View Page.\r\n *\r\n *  @returns {Node} - Returns Images List.\r\n */\r\nfunction ImageList() {\r\n  const scrollRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [masterList, setMasterList] = useState([]);\r\n  const [imgList, setImgList] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const { header, imagesData, filter } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     *  @description - Fetches the page data list.\r\n     *\r\n     *  @returns {null} - Returns null.\r\n     */\r\n    (async () => {\r\n      if (hasMore) {\r\n        const response = await fetch(API.DATASRC + `/page${pageNum}.json`);\r\n        const data = await response.json();\r\n\r\n        dispatch(updateHeader({ title: data?.page?.title || \"\" }));\r\n        dispatch(updateImagesData(data));\r\n      }\r\n    })();\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    if (imagesData) {\r\n      const curList = imagesData?.page[\"content-items\"]?.content || [];\r\n      const updatedList = [...imgList, ...curList];\r\n      const allLoaded =\r\n        parseInt(imagesData?.page[\"total-content-items\"], 10) ===\r\n        updatedList.length;\r\n      if (allLoaded) setHasMore(false);\r\n      setMasterList(updatedList);\r\n      setImgList(updatedList);\r\n    }\r\n  }, [imagesData]);\r\n\r\n  useEffect(() => {\r\n    if (filter.searchKey) {\r\n      const updatedList = masterList.filter(({ name }) =>\r\n        name.toLowerCase().includes(filter.searchKey.toLowerCase())\r\n      );\r\n      setImgList(updatedList);\r\n    } else setImgList([...masterList]);\r\n  }, [filter]);\r\n\r\n  /**\r\n   * @description - Scroll Handler.\r\n   *\r\n   *  @returns {null} - Returns null.\r\n   */\r\n  function handleScroll() {\r\n    const { scrollTop, clientHeight } = scrollRef.current;\r\n    const bottom = scrollTop >= (clientHeight * 3 * pageNum) / 4;\r\n    if (scrollTop > 0 && !header.sticky)\r\n      dispatch(updateHeader({ sticky: true }));\r\n    if (bottom) setPageNum((pageNum) => pageNum + 1);\r\n  }\r\n\r\n  /**\r\n   * @description - LoadMore Button in case no overflow.\r\n   *\r\n   *  @returns {null} - Returns null.\r\n   */\r\n  function loadMore() {\r\n    dispatch(updateHeader({ sticky: true }));\r\n    setPageNum((pageNum) => pageNum + 1);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black w-full h-full overflow-y-auto pb-24\"\r\n      ref={scrollRef}\r\n      onScroll={handleScroll}\r\n    >\r\n      <div className=\"w-full p-4 grid gap-4 grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 2xl:grid-cols-12\">\r\n        {imgList.map((imgObj, index) => {\r\n          return (\r\n            <GridItem\r\n              key={`${imgObj.name.replace(\" \", \"\")}_${index}`}\r\n              item={imgObj}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {hasMore ? (\r\n        <div className=\"hidden md:flex md:flex-row md:justify-center md:item-center md:mb-4\">\r\n          <button\r\n            onClick={loadMore}\r\n            className=\"p-4 text-white bg-gray-900 hover:bg-gray-500 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-opacity-50\"\r\n          >\r\n            Load More\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageList;\r\n","import Header from \"./components/Header\";\nimport ImageList from \"./pages/ImageList\";\n\n/**\n * @description - App Root.\n * @returns {Node} - App Root.\n */\nfunction App() {\n  return (\n    <div className=\"bg-black w-screen h-screen overflow-hidden\">\n      <Header />\n      <ImageList />\n    </div>\n  );\n}\n\nexport default App;\n","import { HEADER } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  sticky: false,\r\n  backButton: true,\r\n  searchEnabled: true,\r\n};\r\n\r\nconst headerReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case HEADER.UPDATE:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { IMAGESDATA } from \"../actions/actionTypes\";\r\n\r\nconst initialState = null;\r\n\r\nconst imagesListReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case IMAGESDATA.UPDATE:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default imagesListReducer;","import { GRIDFILTER } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  searchKey: \"\",\r\n};\r\n\r\nconst gridFilterReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GRIDFILTER.FILTER:\r\n      return { ...state, searchKey: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gridFilterReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport headerReducer from \"./headerReducer\";\r\nimport imagesDataReducer from \"./imagesDataReducer\";\r\nimport gridFilterReducer from \"./gridFilterReducer\";\r\n\r\n/**\r\n * @description - Root reducer.\r\n * @param {Array} state - State val.\r\n * @returns {Array} - State values.\r\n */\r\nconst rootReducer = combineReducers({\r\n  header: headerReducer,\r\n  imagesData: imagesDataReducer,\r\n  filter: gridFilterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as StoreProvider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./store\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\n// Configures redux store.\r\nexport default function configureStore() {\r\n  return createStore(rootReducer);\r\n}\r\n"],"sourceRoot":""}